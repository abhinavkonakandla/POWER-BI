<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE en-export SYSTEM "http://xml.evernote.com/pub/evernote-export4.dtd">
<en-export export-date="20240614T083634Z" application="Evernote" version="10.91.3">
  <note>
    <title>POWER BI NOTES</title>
    <created>20240613T065346Z</created>
    <updated>20240614T081536Z</updated>
    <note-attributes>
    </note-attributes>
    <content>
      <![CDATA[<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"><en-note><div>POWER BI DAX FUNCTIONS</div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">ADDCOLUMNS </span></span></div><div><span style="color:rgb(51, 51, 51);">It adds the calculated columns to the given table or table expression.</span></div><div><span style="color:rgb(51, 51, 51);">syntax    ->ADDCOLUMNS(&lt;TABLE>,&lt;>NAME>,&lt;EXPRESSION>,[&lt;NAME>,&lt;EXPRESSION>]...)</span></div><div><span style="color:rgb(51, 51, 51);">table->it returns a table.</span></div><div><span style="color:rgb(51, 51, 51);">name->the name specifies the column.</span></div><div><span style="color:rgb(51, 51, 51);">expression->Dax expression that needs to perform on each row.</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">a table it's original columns with added columns.</span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">AVERAGE</span></span></div><div><span style="color:rgb(51, 51, 51);">It returns the arithmetic mean of the column.</span></div><div><span style="color:rgb(51, 51, 51);">syntax -> AVERAGE(&lt;COLUMN>)</span></div><div><span style="color:rgb(51, 51, 51);">column -> the column which you want the average.</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns a decimal value.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><div><span style="color:rgb(51, 51, 51);">1.if there are any blank or logical values it will ignore them.</span></div><div><span style="color:rgb(51, 51, 51);">2.if any cell contains 0. it will take for the calculation.</span></div><div><span style="color:rgb(51, 51, 51);">3.suppose, in table if there are no values present then function will return blank. and if there are values and it does not meet the criteria the it returns the 0.</span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">AVERAGEA</span></span></div><div><span style="color:rgb(51, 51, 51);">It returns the average of the values in a column. handles the text and non-numeric values.</span></div><div><span style="color:rgb(51, 51, 51);">syntax -> AVERAGEA(&lt;COLUMN>)</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns a decimal number.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><div><span style="color:rgb(51, 51, 51);">1.value that evaluates to TRUE is 1.</span></div><div><span style="color:rgb(51, 51, 51);">2.value that evaluates to FALSE is 0.</span></div><div><span style="color:rgb(51, 51, 51);">3.values that contains nonnumeric text also 0.</span></div><div><span style="color:rgb(51, 51, 51);">4.empty text counts as 0.</span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">AVERAGEX</span></span></div><div><span style="color:rgb(51, 51, 51);">It returns the average of a set of expressions evaluated over a table.</span></div><div><span style="color:rgb(51, 51, 51);">syntax-> AVERAGEX(&lt;TABLE>,&lt;EXPRESSION>)</span></div><div><span style="color:rgb(51, 51, 51);">Return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns a decimal number </span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><div><span style="color:rgb(51, 51, 51);">it is also same as the average function it does not accept the null values and non numeric values.</span></div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">COUNT</span></span></div><div><span style="color:rgb(51, 51, 51);">It counts the number of cells in a column which contains numeric values or numbers.</span></div><div><span style="color:rgb(51, 51, 51);">syntax-> COUNT(&lt;COLUMN>).</span></div><div><span style="color:rgb(51, 51, 51);">Return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns the whole number.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><div><span style="color:rgb(51, 51, 51);">->IT DOES NOT SUPPORT THE BOOLEAN VALUES.</span></div><div><span style="color:rgb(51, 51, 51);">1.The count function counts the rows that contain the following values</span></div><div><span style="color:rgb(51, 51, 51);">     ->numbers.</span></div><div><span style="color:rgb(51, 51, 51);">     ->dates.</span></div><hr/><div><span style="color:rgb(51, 51, 51);"> </span><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">COUNTA </span></span></div><div><span style="color:rgb(51, 51, 51);">It returns the number of cells containing not only numeric values but also text,non-blank values etc.,</span></div><div><span style="color:rgb(51, 51, 51);">it supports all data types.</span></div><div><span style="color:rgb(51, 51, 51);">syntax-> COUNTA(&lt;COLUMN>)</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns a whole number.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><div><span style="color:rgb(0, 0, 0);">When the function does not find any rows to count, the function returns a blank. When there are rows, but none of them meet the specified criteria, then the function returns 0.</span></div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">COUNTAX</span></span></div><div><span style="color:rgb(51, 51, 51);">It counts nonblank results when evaluating an expression over a </span>table, it<span style="color:rgb(51, 51, 51);"> just works like countax function. but when counting the non-blank cells the empty cells are also counted.</span></div><div><span style="color:rgb(51, 51, 51);">syntax-> COUNTAX(&lt;table>,&lt;expression>)</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">It returns the whole number.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><ol><li><div>it<span style="color:rgb(51, 51, 51);"> supports the boolean values.</span></div></li></ol><div><span style="color:rgb(51, 51, 51);"> </span></div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);">COUNTX</span></span></div><div><span style="color:rgb(51, 51, 51);">Counts the number of rows that contains a number or expression evaluates to a number over a table.</span></div><div><span style="color:rgb(51, 51, 51);">syntax->COUNTX(&lt;TABLE>,&lt;EXPRESSION>)</span></div><div><span style="color:rgb(51, 51, 51);">return value</span></div><div><span style="color:rgb(51, 51, 51);">it returns a whole number.</span></div><div><span style="color:rgb(51, 51, 51);">note:</span></div><ol><li><div>it <span style="color:rgb(51, 51, 51);">does not support for the boolean values.</span></div></li><li><div><span style="color:rgb(51, 51, 51);">parameters that are logical or text cannot be counted.</span></div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="color:rgb(51, 51, 51);"> COUNTBLANK</span></span></div><div><span style="color:rgb(51, 51, 51);">Counts the no of blank cells in a column.</span></div><div><span style="color:rgb(51, 51, 51);">syntax-> COUNTBLANK(&lt;COLUMN>)</span></div><div><span style="color:rgb(51, 51, 51);">Return value</span></div><div><span style="color:rgb(51, 51, 51);">a whole number.</span></div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">COUNTROWS</span></div><div>IT IS USED TO COUNT NO OF ROWS IN A TABLE OR EXPRESSION THAT GIVES A TABLE.</div><div>syntax-> COUNTROWS(&lt;TABLE>)</div><div>RETURN VALUE</div><div>it returns a whole number.</div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">CROSSJOIN</span></div><div>it is used to create single table from combining different tables together.</div><div>syntax->CROSSJOIN(&lt;TABLE1>,&lt;TABLE2>,&lt;TABLE3>...)</div><div>return value </div><div>a table containing all columns of combining parameter tables.</div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">DISTINCTCOUNT</span></div><div>It counts the distinct values from column.</div><div>syntax-> DISTINCTCOUNT(&lt;COLUMN>)</div><div>return value</div><div>it returns the whole number.</div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MAX</span></div><div>it returns the largest value of the column.</div><div>syntax-> MAX(&lt;COLUMN>)</div><div>Return value</div><div>a whole number.</div><div>note:</div><ol><li><div>it supports only numeric values and dates.</div></li><li><div>empty cells, logical values and text are ignored.</div></li></ol><div> </div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MAXA</span></div><div>It returns the largest value from the column. </div><div>syntax->MAXA(&lt;COLUMN>)</div><div>return value</div><div>a decimal number.</div><div>note:</div><ol><li><div>numbers ,dates and logical values are considered.</div></li><li><div>empty values are ignored.</div></li><li><div>if column contains no values MAXA returns 0.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MAXX </span></div><div>Evaluates an expression for each row of a table and returns the largest numeric value.</div><div>syntax->MAXX(&lt;TABLE>,&lt;EXPRESSION>).</div><div>return value</div><div>returns a decimal number.</div><div>note:</div><ol><li><div>it supports only numeric values and dates.</div></li><li><div>empty cells, logical values and text are ignored.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MIN</span></div><div>It returns the minimum value from the given column.</div><div>syntax-> MIN(&lt;COLUMN>).</div><div>return value</div><div>a decimal number.</div><div>note:</div><ol><li><div>it works only for dates and numeric values.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MINA</span></div><div>It returns the smallest from the column including any logical values or number written as text.</div><div>syntax->MINA(&lt;COLUMN>)</div><div>return value</div><div>returns a decimal number.</div><div>note:</div><ol><li><div>it supports for numeric values and dates.</div></li><li><div>supports for text that can be converted to numeric values.</div></li><li><div>it also supports for logical values.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">MINX</span></div><div>it returns the minimum number from the given column over the given expression.</div><div>syntax->MINX(&lt;COLUMN>)</div><div>return value</div><div>a decimal number.</div><div>note:</div><ol><li><div>only numbers are counted. other than that if there are any values, MINX returns 0.</div></li><li><div>logical values ,text and empty cells are ignored.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;"> PRODUCT</span></div><div>It returns the product of numbers in a column.</div><div>syntax->PRODUCT(&lt;COLUMN>).</div><div>return value</div><div>it returns the decimal number.</div><div>note:</div><ol><li><div>blank,text and logical values are ignored.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">PRODUCTX</span></div><div>It returns the product of numbers in a column from an expression evaluated for each row in a table.</div><div>syntax->PRODUCTX(&lt;TABLE>,&lt;EXPRESSION>).</div><div>return value</div><div>it returns the decimal number.</div><div>note:</div><ol><li><div>blank,text and logical values are ignored.</div></li></ol><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">ROW </span></div><div>Returns the single row containing values resulted from the expression.</div><div>syntax->ROW(&lt;NAME>,&lt;EXPRESSION>).</div><div>return value</div><div>a decimal value.</div><div>note:</div><div>parameters must always come in pair of name and expression.</div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">SELECTCOLUMNS</span></div><div>Adds the calculated column to the given table or table expression.</div><div>syntax->SELECTCOLUMNS(&lt;TABLE>,&lt;NAME>,&lt;EXPRESSION>).</div><div>return value</div><div>a table with same number of rows same as original table. the returned table has only one column.</div><div>note:</div><div><span style="color:rgb(0, 0, 0);">SELECTCOLUMNS is similar to ADDCOLUMNS, and has the same behavior except that instead of starting with the table specified, SELECTCOLUMNS start with an empty table before adding columns.</span></div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">SUM</span></div><div>It returns the sum of the column values.</div><div>syntax->SUM(&lt;COLUMN>).</div><div>return value</div><div>a decimal number.</div><div>note:</div><div>if any non numeric values are present , blanks are returned.</div><hr/><div><span style="--en-highlight:green;background-color: #b7f7d1;">SUMX</span></div><div>it returns the sum of all values in a column over an expression.</div><div>syntax->SUMX(&lt;TABLE>,&lt;EXPRESSION>).</div><div>return value</div><div>a decimal value</div><div>note:</div><div><span style="color:rgb(0, 0, 0);">Blanks, logical values, and text are ignored.</span></div><hr/><div><br/></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div><div><span style="--en-highlight:green;background-color: #b7f7d1;"><span style="--en-markholder:true;"><br/></span></span></div></en-note>      ]]>
    </content>
  </note>
</en-export>
